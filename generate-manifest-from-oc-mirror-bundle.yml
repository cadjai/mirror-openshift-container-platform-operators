#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: 'Generate Manifests for contet mirrored using oc-mirror | generate-manifest-from-oc-mirror-bundle.yml'
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3.6
    module: "generate-manifests"
    ansible_name_module: "Generate Manifests using oc-mirror | {{ module }}"

  vars_files:
    - 'vars/vault.yml'
    - 'vars/registry.yml'
  
  pre_tasks:
    - name: Ensure required oc-mirror binary is installed on host
      when:
        - not oc_mirror_cli is defined or oc_mirror_cli == ''
      block:
        - name: '{{ ansible_name_module }} | command:which | Check if oc-mirror is installed'
          ansible.builtin.shell: >
            which oc-mirror
          ignore_errors: yes
          register: ocmirror_binary

        - name: '{{ ansible_name_module }} | set_fact |  oc_mirror_cli'
          ansible.builtin.set_fact:
            oc_mirror_cli: "{{ ocmirror_binary.stdout }}"
          when:
            - ocmirror_binary is defined
            - ocmirror_binary.rc is defined
            - ocmirror_binary.rc == 0
            - ocmirror_binary.stdout is defined
            - ocmirror_binary.stdout != ''

  tasks:
    - name: '{{ ansible_name_module }} | ansible.builtin.shell | Generate manifests from imageset catalogs config files '
      include_tasks: tasks/retrieve-manifests-from-oc-mirror-bundle.yml
      loop: "{{ imageset_config_files }}"
      vars:
        imageset_config_file: "{{ item }}"
        bundle_name: "{{ (item  | basename).split('.')[0] }}.tar"
      register: all_bundle_processed

    - name: '{{ ansible_name_module }} | Print Manifest extraction output'
      ansible.builtin.debug:
        var: all_bundle_processed.results
        verbosity: 2

